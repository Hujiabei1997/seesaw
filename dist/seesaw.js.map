{"version":3,"sources":["../libs/seesaw.js"],"names":[],"mappings":";;;;mBAAgB,KAAK;;;;oBACJ,MAAM;;;;oBACN,MAAM;;;;uBACH,SAAS;;;;uBACT,SAAS;;;;AAE7B,SAAS,UAAU,CAAC,IAAI,EAAE;AACxB,MAAI,OAAO,IAAI,AAAC,KAAK,QAAQ;AAC3B,WAAO,IAAI,CAAA;GAAA,AAEb,IAAI;AACF,WAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;GAC5B,CAAC,OAAO,GAAG,EAAE;AACZ,WAAO,IAAI,CAAC,QAAQ,EAAE,CAAA;GACvB;CACF;;AAED,SAAS,QAAQ,CAAC,OAAO,EAAE;AACzB,SAAO,UAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAK;AACzB,QAAI,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,mCAAmC,IAAI,GAAG,CAAC,MAAM,KAAK,MAAM,CAAA;;AAEzG,QAAM,MAAM,GAAG;AACb,cAAU,GAAG,CAAC,MAAM;AACpB,eAAW,GAAG,CAAC,OAAO;AACtB,WAAO,iBAAI,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,GAAG,CAAC;AACpC,aAAS,GAAG,CAAC,KAAK;KACnB,CAAA;;AAED,UAAM,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAA;AAC1B,UAAM,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAA;AAC5B,UAAM,CAAC,GAAG,GAAG,iBAAI,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,GAAG,CAAC,CAAA;AAC1C,UAAM,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAA;;AAExB,QAAI,GAAG,CAAC,KAAK,EACX,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAA;;AAE1B,QAAI,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,KAAK,KAAK,EACjC,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;;AAEpC,QAAI,MAAM,EACR,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAA;;AAExB,yBAAQ,MAAM,EAAE,UAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAK;AACvC,UAAI,GAAG,EACL,OAAO,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;;AAEtB,UAAI,QAAQ,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,kBAAkB,EACxD,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAA;;AAEnC,aAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;KACtB,CAAC,CAAA;GACH,CAAA;CACF;;AAED,SAAS,MAAM,CAAC,OAAO,EAAE;AACvB,MAAI,GAAG,GAAG,sBAAS,CAAA;AACnB,KAAG,CAAC,GAAG,CAAC,qBAAQ,MAAM,CAAC,KAAK,CAAC,CAAC,CAAA;AAC9B,KAAG,CAAC,GAAG,CAAC,qBAAQ,UAAU,EAAE,CAAC,CAAA;AAC7B,KAAG,CAAC,GAAG,CAAC,qBAAQ,cAAc,EAAE,CAAC,CAAA;AACjC,KAAG,CAAC,GAAG,CAAC,qBAAQ,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAA;AACvC,KAAG,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;;AAEnB,MAAI,aAAa,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,EACjC,GAAG,CAAC,GAAG,CAAC,qBAAQ,YAAY,EAAE,CAAC,CAAA;;AAEjC,KAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAA;;AAE1B,SAAO,GAAG,CAAA;CACX;;AAED,SAAS,MAAM,CAAC,GAAG,EAAE;AACnB,MAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACf,MAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;CAC5B;;AAED,MAAM,CAAC,SAAS,CAAC,GAAG,GAAG,UAAS,IAAI,EAAE;AACpC,MAAI,CAAC,GAAG,AAAC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAA;AAChE,MAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;AACvB,oBAAK,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAA;CACzD,CAAA;;AAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAA;AACvB,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAA","file":"libs/seesaw.js","sourcesContent":["import url from 'url'\nimport http from 'http'\nimport path from 'path'\nimport express from 'express'\nimport request from 'request'\n\nfunction ensureBody(body) {\n  if (typeof(body) !== 'object') \n    return body\n\n  try {\n    return JSON.stringify(body)\n  } catch (err) {\n    return body.toString()\n  }\n}\n\nfunction redirect(mockurl) {\n  return (req, res, next) => {\n    var isForm = req.headers['content-type'] === 'application/x-www-form-urlencoded' && req.method === 'POST'\n\n    const target = {\n      'method': req.method,\n      'headers': req.headers,\n      'url': url.resolve(mockurl, req.url),\n      'query': req.query\n    }\n\n    target.method = req.method\n    target.headers = req.headers\n    target.url = url.resolve(mockurl, req.url)\n    target.query = req.query\n\n    if (req.files) \n      target.files = req.files\n\n    if (!isForm && req.method !== 'GET') \n      target.body = ensureBody(req.body)\n\n    if (isForm) \n      target.form = req.body\n\n    request(target, (err, response, body) => {\n      if (err) \n        return res.send(err)\n\n      if (response.headers['content-type'] == 'application/json') \n        return res.json(JSON.parse(body))\n\n      return res.send(body)\n    })\n  }\n}\n\nfunction Server(mockurl) {\n  var app = express()\n  app.use(express.logger('dev'))\n  app.use(express.bodyParser())\n  app.use(express.methodOverride())\n  app.use(express.cookieParser('seesaw'))\n  app.use(app.router)\n\n  if ('development' == app.get('env')) \n    app.use(express.errorHandler())\n\n  app.use(redirect(mockurl))\n\n  return app\n}\n\nfunction Seesaw(url) {\n  this.url = url;\n  this.app = new Server(url);\n}\n\nSeesaw.prototype.run = function(port) {\n  var p = (port && !isNaN(parseInt(port))) ? parseInt(port) : 3333\n  this.app.set('port', p)\n  http.createServer(this.app).listen(this.app.get('port'))\n}\n\nexports.server = Seesaw\nexports.redirect = redirect\n"]}